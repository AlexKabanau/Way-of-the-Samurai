{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/Dialogs/Dialogs.module.css","components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","utils/validators/validator.js"],"names":["DialogItem","props","path","id","React","createElement","className","s","dialog","NavLink","to","name","Message","messageSide","author","myMessage","notMyMessage","concat","message","messageWrapper","messageCard","messageHeader","authorImage","src","alt","about","authorName","locationNDate","location","smallParagraph","datetime","date","messageText","AddMessageForm","Formik","initialValues","newMessageBody","onSubmit","values","_ref","setSubmitting","resetForm","onSendMessageClick","validationSchema","basicMessageSchema","_ref2","isSubmitting","errors","touched","Form","Field","Object","assign","as","MessageTextArea","placeholder","disabled","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","Navigate","module","exports","active","__webpack_require__","d","__webpack_exports__","PostTextArea","formik__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_2__","_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_2___default","newPostText","formControl","error","basicPostSchema","yup__WEBPACK_IMPORTED_MODULE_0__","yup","shape","min","max","required"],"mappings":"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","file":"static/js/3.0b06eed5.chunk.js","sourcesContent":["import React from \"react\"\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\"\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  let messageSide = props.author === \"Me\" ? s.myMessage : s.notMyMessage;\r\n  return (\r\n    <div className={`${s.message} ${messageSide}`}>\r\n\r\n      <div className={s.messageWrapper}>\r\n        <div className={s.messageCard}>\r\n          <div className={s.messageHeader}>\r\n            <img className={s.authorImage} src=\"https://img.championat.com/s/735x490/news/big/y/g/avatar-2-sobral-v-rossii-bolshe-2-4-mlrd-rublej_16758793371084217002.jpg\" alt=\"Michael John\"/>\r\n              <div className={s.about}>\r\n                <p className={s.authorName}>{props.author}</p>\r\n                <div className={s.locationNDate}>\r\n                  <p className={`${s.location} ${s.smallParagraph}`}>{props.location}</p>\r\n                  <p className={`${s.datetime} ${s.smallParagraph}`}>{props.date}</p>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <p className={`${s.messageText} ${s.smallParagraph}`}>{props.message}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { MessageTextArea } from \"../Common/FormsControls/FormsControls\";\r\nimport { basicMessageSchema } from \"../../utils/validators/validator\";\r\n\r\nconst Dialogs = (props) => {\r\n  // debugger\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs\r\n    .map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n\r\n  let messagesElements = state.messages\r\n    .map(message => <Message message={message.message} author={message.author} location={message.location} date={message.date} />);\r\n\r\n  let onSendMessageClick = (newMessageBody) => {\r\n    // debugger\r\n    props.sendMessage(newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Dialogs\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n          {\r\n            dialogsElements\r\n          }\r\n        </div>\r\n        <div className={s.messages}>\r\n          {\r\n            messagesElements\r\n          }\r\n          <AddMessageForm\r\n            onSendMessageClick={onSendMessageClick}\r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  const submit = (values, { setSubmitting, resetForm }) => {\r\n    // debugger\r\n    // console.log(values.newMessageBody);\r\n    props.onSendMessageClick(values.newMessageBody)\r\n    resetForm();\r\n    setSubmitting(false);\r\n\r\n  }\r\n  return (\r\n    <Formik\r\n      initialValues={{ newMessageBody: '' }}\r\n      onSubmit={submit}\r\n      validationSchema={basicMessageSchema}\r\n\r\n    >\r\n      {({ isSubmitting, errors, touched }) => (\r\n        <Form>\r\n          <div>\r\n            <Field\r\n              name=\"newMessageBody\"\r\n              as={MessageTextArea}\r\n              placeholder=\"Enter your message\"\r\n              {...errors}\r\n            >\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <button\r\n              disabled={isSubmitting}\r\n            >Send\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      // debugger\r\n      if (!this.props.isAuth) {\r\n        return <Navigate to=\"/login\" />\r\n      }\r\n      return <Component {...this.props}/>\r\n    }\r\n  }\r\n  \r\n  let connectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return connectAuthRedirectComponent\r\n}","// import React from \"react\"\r\nimport {  sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n// import { Connect } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\n// import { Navigate } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n// import StoreContext from \"../../StoreContext\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      // debugger\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1JIW_\",\"dialogsItems\":\"Dialogs_dialogsItems__3N2eh\",\"active\":\"Dialogs_active__2lwpj\",\"messages\":\"Dialogs_messages__1BNwA\",\"message\":\"Dialogs_message__1n2KW\",\"messageWrapper\":\"Dialogs_messageWrapper__3ZhDC\",\"myMessage\":\"Dialogs_myMessage__3hAt-\",\"notMyMessage\":\"Dialogs_notMyMessage__3l0bD\",\"messageCard\":\"Dialogs_messageCard__3HYXD\",\"messageHeader\":\"Dialogs_messageHeader__3Pa5v\",\"about\":\"Dialogs_about__1loBv\",\"authorName\":\"Dialogs_authorName__g4_i9\",\"locationNDate\":\"Dialogs_locationNDate__1H23t\",\"location\":\"Dialogs_location__1rPV0\",\"datetime\":\"Dialogs_datetime__30Dly\",\"authorImage\":\"Dialogs_authorImage__JHOeJ\",\"messageText\":\"Dialogs_messageText__t2BSt\"};","import { Field } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\n\r\n\r\nexport const PostTextArea = (props) => {\r\n  debugger\r\n  return (\r\n    <div className={props.newPostText && s.formControl + ' ' + s.error}>\r\n      <div>\r\n        <Field {...props} as=\"textarea\" />\r\n      </div>\r\n      {props.newPostText && <span>{props.newPostText}</span> }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport const MessageTextArea = (props) => {\r\n  debugger\r\n  return (\r\n    <div className={props.newMessageBody && s.formControl + ' ' + s.error}>\r\n      <div>\r\n        <Field {...props} as=\"textarea\" />\r\n      </div>\r\n      {props.newMessageBody && <span>{props.newMessageBody}</span> }\r\n      \r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2xvfE\",\"error\":\"FormsControls_error__2B2Hh\"};","import * as yup from \"yup\"\r\n\r\nexport const basicPostSchema = yup.object().shape({\r\n  newPostText: yup\r\n    .string()\r\n    .min(2, \"Post is too short!\" )\r\n    .max(10, 'Post is too Long!')\r\n    .required(\"Required\"),\r\n  // newMessageBody: yup\r\n  //   .string()\r\n  //   .min(2, \"Message is too short!\" )\r\n  //   .max(10, 'Message is too Long!')\r\n  //   .required(\"Required\"),\r\n  \r\n})\r\nexport const basicMessageSchema = yup.object().shape({\r\n  // newPostText: yup\r\n  //   .string()\r\n  //   .min(2, \"Post is too short!\" )\r\n  //   .max(10, 'Post is too Long!')\r\n  //   .required(\"Required\"),\r\n  newMessageBody: yup\r\n    .string()\r\n    .min(2, \"Message is too short!\" )\r\n    .max(10, 'Message is too Long!')\r\n    .required(\"Required\"),\r\n\r\n})\r\n\r\n// export const requiredField = (value) => {\r\n//   if (value) {\r\n//     return undefined\r\n//   }\r\n//   return 'Field is required'\r\n// }\r\n// export const maxLength30 = (value) => {\r\n//   if (value && value.length > 30) {\r\n//     return undefined\r\n//   }\r\n//   return 'Field is required'\r\n// }\r\n\r\n"],"sourceRoot":""}