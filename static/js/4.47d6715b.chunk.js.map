{"version":3,"sources":["components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Common/FormsControls/FormsControls.js","components/Common/FormsControls/FormsControls.module.css","utils/validators/validator.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css"],"names":["ProfileStatusWithHooks","props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","React","createElement","onDoubleClick","onChange","element","currentTarget","value","onBlur","updateStatus","autoFocus","ProfileDataForm","_ref","profile","saveProfile","Formik","initialValues","onSubmit","formData","then","_ref2","isSubmitting","Form","type","disabled","for","Field","name","as","placeholder","required","Object","keys","contacts","map","key","className","s","contact","Contact","contactTitle","contactValue","ProfileData","_ref3","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo","savePhoto","Preloader","src","alt","userMainPhoto","descriptionBlock","photos","large","userPhoto","target","files","length","Post","item","age","message","likeCount","MyPosts","memo","postsElements","posts","post","id","likesCount","postsBlock","AddPostForm","onAddPost","newPostText","addPost","errorMessage","values","setSubmitting","resetForm","validationSchema","basicPostSchema","errors","touched","assign","PostTextArea","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","compose","getUserProfile","getStatus","userId","useParams","axios","get","response","data","__webpack_require__","d","__webpack_exports__","MessageTextArea","formik__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_2__","_FormsControls_module_css__WEBPACK_IMPORTED_MODULE_2___default","formControl","error","newMessageBody","module","exports","basicMessageSchema","yup__WEBPACK_IMPORTED_MODULE_0__","yup","shape","min","max","description","input_error"],"mappings":"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","file":"static/js/4.47d6715b.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import s from \"./ProfileInfo.module.css\"\r\n// import Preloader from \"../../../Common/Preloader/Preloader\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  // let stateWithSetState = useState(true);\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true)\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false)\r\n\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (element) => {\r\n    // console.log(element.currentTarget.value);\r\n    setStatus(element.currentTarget.value)\r\n    // console.log(this.state.status);\r\n\r\n  }\r\n  // let editMode = stateWithSetState[0];\r\n  // let setEditMode = stateWithSetState[1];\r\n  \r\n    return (\r\n      <div>\r\n        { !editMode &&\r\n          <div>\r\n            <b>Status: </b><span \r\n            onDoubleClick={ activateEditMode }\r\n            >\r\n              {props.status || \"------------\"}</span>\r\n              \r\n          </div>\r\n        }\r\n        {editMode &&\r\n          <div>\r\n            <input \r\n              // ref={this.statusInputRef}\r\n              onChange={onStatusChange}\r\n              value={status}\r\n              onBlur={ deactivateEditMode }\r\n              autoFocus={true}></input>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  \r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport { Formik, Form, Field } from 'formik';\r\n// import { Contact } from \"./ProfileInfo\";\r\nimport s from \"./ProfileInfo.module.css\"\r\n\r\nconst ProfileDataForm = ({ profile, saveProfile, setEditMode }) => {\r\n  const onSubmit = (formData) => {\r\n    // debugger\r\n    // console.log(formData)\r\n\r\n    saveProfile(formData).then(\r\n      () => {\r\n        // debugger\r\n        setEditMode(false)\r\n      }\r\n    )\r\n  }\r\n  return (\r\n\r\n    <Formik\r\n      initialValues={{ profile }}\r\n    onSubmit={onSubmit}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n          <div>\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              Save\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <label for=\"fullName\"><b>Full Name: </b></label>\r\n            <Field type=\"text\" name=\"fullName\" />\r\n            {/* <ErrorMessage name=\"fullName\" component=\"div\" /> */}\r\n          </div>\r\n          <div>\r\n            <Field type={\"checkbox\"} name=\"lookingForAJob\" />Looking for a job\r\n          </div>\r\n          <div>\r\n            <label for=\"lookingForAJobDescription\"><b>My professinal skills: </b></label>\r\n            <Field name=\"lookingForAJobDescription\"\r\n              as='textarea'\r\n              placeholder=\"Enter your skills\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label for=\"aboutMe\"><b>About Me: </b></label>\r\n            <Field name=\"aboutMe\"\r\n              as='textarea'\r\n              placeholder=\"About Me\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n              return <div key={key} className={s.contact}>\r\n                <label for={`contacts.` + key}><b>{key}</b>:</label>\r\n                <Field type=\"text\" name={`contacts.` + key} />\r\n              </div>\r\n            })}\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n\r\n  )\r\n}\r\n\r\nexport default ProfileDataForm","import React, { useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../../Common/Preloader/Preloader\";\r\n// import ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../../assets/images/userphoto.png\"\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n  \r\n  let [editMode, setEditMode] = useState(false);\r\n  \r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (element) => {\r\n    // debugger\r\n    if (element.target.files.length) {\r\n      savePhoto(element.target.files[0])\r\n    }\r\n  }\r\n\r\n  // const onSubmit = (formData) => {\r\n  //   debugger\r\n  //   console.log(formData)\r\n  //   // saveProfile(formData).then(\r\n  //   //   () => {\r\n  //   //     setEditMode(false)\r\n  //   //   }\r\n  //   // )\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src=\"https://open.lib.umn.edu/app/uploads/sites/5/2015/09/9.1.jpg\" alt=\"User mainPhoto\" className={s.userMainPhoto} />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} alt=\"\" className={s.userPhoto} />\r\n        {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n        { editMode \r\n        ? <ProfileDataForm profile={profile} saveProfile={saveProfile} setEditMode={setEditMode}/> \r\n        : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => {setEditMode(true)}}/> }\r\n\r\n        <ProfileStatusWithHooks\r\n          status={status}\r\n          updateStatus={updateStatus}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}:</b> {contactValue}</div>\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return <div>\r\n    { isOwner && <button onClick={goToEditMode}>Edit</button> }\r\n    <div>\r\n      <b>Full name: </b>{profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job: </b>{profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n      <div>\r\n        <b>My professional skills: </b>{profile.lookingForAJobDescription}\r\n      </div>}\r\n    <div>\r\n      <b>About me: </b>{profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n      })}\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n  \r\n  // debugger;\r\n\r\n  return (\r\n    \r\n\r\n    <div className={s.item}>\r\n      <img src=\"https://img.championat.com/s/735x490/news/big/y/g/avatar-2-sobral-v-rossii-bolshe-2-4-mlrd-rublej_16758793371084217002.jpg\" alt=\"\" />\r\n      <div>\r\n        <span>{props.name}, {props.age}</span>\r\n      </div>\r\n      { props.message }\r\n      <div>\r\n        <span>Like { props.likeCount }</span>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;","import { Formik, Form, Field } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from \"./Post/Post\";\r\n// import { requiredField, maxLength30 } from \"../../../utils/validators/validator\";\r\nimport { basicPostSchema } from \"../../../utils/validators/validator\";\r\nimport { PostTextArea } from \"../../Common/FormsControls/FormsControls\";\r\n\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElements = props.posts\r\n    .map(post => <Post name={post.name} message={post.message} id={post.id} age={post.age} likeCount={post.likesCount} />);\r\n\r\n  let onAddPost = (newPostText) => {\r\n    props.addPost(newPostText);\r\n  }\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>\r\n        my posts\r\n      </h3>\r\n      <AddPostForm \r\n        onAddPost={onAddPost}\r\n      />\r\n      <div className={s.posts}>\r\n\r\n        {\r\n          postsElements\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n  const submit = (values, { setSubmitting, resetForm }) => {\r\n      props.onAddPost(values.newPostText)\r\n      // console.log(props)\r\n      resetForm();\r\n      setSubmitting(false);\r\n    }\r\n\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{ newPostText: '', errorMessage: '' }}\r\n        onSubmit={submit}\r\n        validationSchema={basicPostSchema}\r\n        \r\n      >\r\n        {({ isSubmitting, errors, touched }) => (\r\n          <Form>\r\n            <div>\r\n              <Field\r\n                name=\"newPostText\"\r\n                as={PostTextArea}\r\n                placeholder=\"Enter your post\"\r\n                // validate={requiredField, maxLength30}\r\n                // validate={requiredField, maxLength30}\r\n                // className={errors.newPostText && touched.newPostText ? `${s.input_error}` : \"\"}\r\n                {...errors}\r\n              >\r\n              </Field>\r\n            </div>\r\n\r\n            <div>\r\n              <button\r\n                disabled={isSubmitting}\r\n                type=\"submit\"\r\n              >\r\n                Add Post\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    )\r\n  }\r\n\r\n  export default MyPosts;","// import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      // debugger\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n// import s from \"./Profile.module.css\"\r\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n// import { useEffect, useState } from \"react\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import { setUserProfile } from \"../../redux/profile-reducer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n  debugger\r\n  // console.log(useParams())\r\n\r\n  // let {userId} = useParams();\r\n  // if (!userId) {\r\n  //   userId = 2;\r\n  //   userId = 29257;\r\n\r\n  // }\r\n  // const [profile, setUserProfile] = useState(null);\r\n\r\n  // useEffect( () => {\r\n  //   fetch('https://social-network.samuraijs.com/api/1.0/profile/' + userId)\r\n  //   .then(response => response.json())\r\n  //   .then(data => setUserProfile(data))\r\n  // }, [userId]);\r\n\r\n\r\n  return (\r\n    <main>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        savePhoto={props.savePhoto}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer\r\n      // store={props.store}\r\n      />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport axios from \"axios\"\r\n\r\n// import { Navigate } from \"react-router-dom\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nconst ProfileContainer = (props) => {\r\n  let { userId } = useParams();\r\n  if (!userId) {\r\n    userId = 29275;\r\n    // userId = 2;\r\n  }\r\n  const [profile, getUserProfile] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://social-network.samuraijs.com/api/1.0/profile/' + userId)\r\n      .then(response => response.data)\r\n      .then(data => getUserProfile(data))\r\n  }, [userId]);\r\n  props.getStatus(userId)\r\n\r\n  return (\r\n    <main>\r\n      <Profile\r\n        {...props}\r\n        profile={profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        isOwner={userId === 29275 ? true : false}\r\n        savePhoto={props.savePhoto}\r\n      />\r\n    </main>\r\n  )\r\n  // }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status\r\n\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {\r\n    getUserProfile,\r\n    getStatus,\r\n    updateStatus,\r\n    savePhoto,\r\n    saveProfile\r\n  }),\r\n)(ProfileContainer);","import { Field } from \"formik\";\r\nimport React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\n\r\n\r\n\r\nexport const PostTextArea = (props) => {\r\n  debugger\r\n  return (\r\n    <div className={props.newPostText && s.formControl + ' ' + s.error}>\r\n      <div>\r\n        <Field {...props} as=\"textarea\" />\r\n      </div>\r\n      {props.newPostText && <span>{props.newPostText}</span> }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport const MessageTextArea = (props) => {\r\n  debugger\r\n  return (\r\n    <div className={props.newMessageBody && s.formControl + ' ' + s.error}>\r\n      <div>\r\n        <Field {...props} as=\"textarea\" />\r\n      </div>\r\n      {props.newMessageBody && <span>{props.newMessageBody}</span> }\r\n      \r\n    </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2xvfE\",\"error\":\"FormsControls_error__2B2Hh\"};","import * as yup from \"yup\"\r\n\r\nexport const basicPostSchema = yup.object().shape({\r\n  newPostText: yup\r\n    .string()\r\n    .min(2, \"Post is too short!\" )\r\n    .max(10, 'Post is too Long!')\r\n    .required(\"Required\"),\r\n  // newMessageBody: yup\r\n  //   .string()\r\n  //   .min(2, \"Message is too short!\" )\r\n  //   .max(10, 'Message is too Long!')\r\n  //   .required(\"Required\"),\r\n  \r\n})\r\nexport const basicMessageSchema = yup.object().shape({\r\n  // newPostText: yup\r\n  //   .string()\r\n  //   .min(2, \"Post is too short!\" )\r\n  //   .max(10, 'Post is too Long!')\r\n  //   .required(\"Required\"),\r\n  newMessageBody: yup\r\n    .string()\r\n    .min(2, \"Message is too short!\" )\r\n    .max(10, 'Message is too Long!')\r\n    .required(\"Required\"),\r\n\r\n})\r\n\r\n// export const requiredField = (value) => {\r\n//   if (value) {\r\n//     return undefined\r\n//   }\r\n//   return 'Field is required'\r\n// }\r\n// export const maxLength30 = (value) => {\r\n//   if (value && value.length > 30) {\r\n//     return undefined\r\n//   }\r\n//   return 'Field is required'\r\n// }\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMainPhoto\":\"ProfileInfo_userMainPhoto__2PM_g\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1yNYD\",\"description\":\"ProfileInfo_description__3neIC\",\"fullName\":\"ProfileInfo_fullName__2H4Vh\",\"userPhoto\":\"ProfileInfo_userPhoto__3ztja\",\"contact\":\"ProfileInfo_contact__2Cu4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1SCmN\",\"posts\":\"MyPosts_posts__2vhA_\",\"input_error\":\"MyPosts_input_error__3PQcd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__alB57\"};"],"sourceRoot":""}