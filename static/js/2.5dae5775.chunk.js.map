{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","message","messageWrapper","myMessage","notMyMessage","messageCard","messageHeader","about","authorName","locationNDate","location","datetime","authorImage","messageText","DialogItem","props","path","id","React","createElement","className","s","dialog","NavLink","to","name","Message","messageSide","author","concat","src","alt","smallParagraph","date","AddMessageForm","Formik","initialValues","newMessageBody","onSubmit","values","_ref","setSubmitting","resetForm","onSendMessageClick","validationSchema","basicMessageSchema","_ref2","isSubmitting","errors","touched","Form","Field","Object","assign","as","MessageTextArea","placeholder","disabled","Dialogs","state","dialogsPage","dialogsElements","map","messagesElements","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"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","file":"static/js/2.5dae5775.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1JIW_\",\"dialogsItems\":\"Dialogs_dialogsItems__3N2eh\",\"active\":\"Dialogs_active__2lwpj\",\"messages\":\"Dialogs_messages__1BNwA\",\"message\":\"Dialogs_message__1n2KW\",\"messageWrapper\":\"Dialogs_messageWrapper__3ZhDC\",\"myMessage\":\"Dialogs_myMessage__3hAt-\",\"notMyMessage\":\"Dialogs_notMyMessage__3l0bD\",\"messageCard\":\"Dialogs_messageCard__3HYXD\",\"messageHeader\":\"Dialogs_messageHeader__3Pa5v\",\"about\":\"Dialogs_about__1loBv\",\"authorName\":\"Dialogs_authorName__g4_i9\",\"locationNDate\":\"Dialogs_locationNDate__1H23t\",\"location\":\"Dialogs_location__1rPV0\",\"datetime\":\"Dialogs_datetime__30Dly\",\"authorImage\":\"Dialogs_authorImage__JHOeJ\",\"messageText\":\"Dialogs_messageText__t2BSt\"};","import React from \"react\"\r\nimport s from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n  let path = '/dialogs/' + props.id;\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\"\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\nconst Message = (props) => {\r\n  let messageSide = props.author === \"Me\" ? s.myMessage : s.notMyMessage;\r\n  return (\r\n    <div className={`${s.message} ${messageSide}`}>\r\n\r\n      <div className={s.messageWrapper}>\r\n        <div className={s.messageCard}>\r\n          <div className={s.messageHeader}>\r\n            <img className={s.authorImage} src=\"https://img.championat.com/s/735x490/news/big/y/g/avatar-2-sobral-v-rossii-bolshe-2-4-mlrd-rublej_16758793371084217002.jpg\" alt=\"Michael John\"/>\r\n              <div className={s.about}>\r\n                <p className={s.authorName}>{props.author}</p>\r\n                <div className={s.locationNDate}>\r\n                  <p className={`${s.location} ${s.smallParagraph}`}>{props.location}</p>\r\n                  <p className={`${s.datetime} ${s.smallParagraph}`}>{props.date}</p>\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <p className={`${s.messageText} ${s.smallParagraph}`}>{props.message}</p>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport { MessageTextArea } from \"../Common/FormsControls/FormsControls\";\r\nimport { basicMessageSchema } from \"../../utils/validators/validator\";\r\n\r\nconst Dialogs = (props) => {\r\n  // debugger\r\n\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs\r\n    .map(dialog => <DialogItem name={dialog.name} id={dialog.id} />);\r\n\r\n  let messagesElements = state.messages\r\n    .map(message => <Message message={message.message} author={message.author} location={message.location} date={message.date} />);\r\n\r\n  let onSendMessageClick = (newMessageBody) => {\r\n    // debugger\r\n    props.sendMessage(newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      Dialogs\r\n      <div className={s.dialogs}>\r\n        <div className={s.dialogsItems}>\r\n          {\r\n            dialogsElements\r\n          }\r\n        </div>\r\n        <div className={s.messages}>\r\n          {\r\n            messagesElements\r\n          }\r\n          <AddMessageForm\r\n            onSendMessageClick={onSendMessageClick}\r\n          />\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n  const submit = (values, { setSubmitting, resetForm }) => {\r\n    // debugger\r\n    // console.log(values.newMessageBody);\r\n    props.onSendMessageClick(values.newMessageBody)\r\n    resetForm();\r\n    setSubmitting(false);\r\n\r\n  }\r\n  return (\r\n    <Formik\r\n      initialValues={{ newMessageBody: '' }}\r\n      onSubmit={submit}\r\n      validationSchema={basicMessageSchema}\r\n\r\n    >\r\n      {({ isSubmitting, errors, touched }) => (\r\n        <Form>\r\n          <div>\r\n            <Field\r\n              name=\"newMessageBody\"\r\n              as={MessageTextArea}\r\n              placeholder=\"Enter your message\"\r\n              {...errors}\r\n            >\r\n            </Field>\r\n          </div>\r\n          <div>\r\n            <button\r\n              disabled={isSubmitting}\r\n            >Send\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default Dialogs;","// import React from \"react\"\r\nimport {  sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\n// import { Connect } from \"react-redux\";\r\nimport { connect } from \"react-redux\";\r\n// import { Navigate } from \"react-router-dom\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n// import StoreContext from \"../../StoreContext\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      // debugger\r\n      dispatch(sendMessageCreator(newMessageBody))\r\n    },\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}